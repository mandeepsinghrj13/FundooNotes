{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "FundooNotes",
        "description": "This app is build for notes",
        "license" : {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }        
    },
    "host": "localhost:8000",
    "tags": [
        {
            "name": "FundooNotess",
            "description": "API for user registration"
        }
    ],
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/register": {
            "post": {
                "tags": ["Register"],
                "description": "Register new user",
                "parameters": [
                    {
                        "name": "Register",
                        "in": "body",
                        "description": "User want to registration",
                        "schema": { 
                            "$ref": "#/definitions/registerUser"
                        }
                    }
                ],

                "produces": ["application/json"],
                "responses": {
                    "201": {
                        "description": "User Data Inserted successfully"
                    },
                    "400": {
                        "description": "Wrong Input Validations"
                    },
                    "409": {
                        "description": "Already exist User"
                    },
                    "500": {
                        "description": "server-error"
                    }
                }
            }
        },
    
    "/login": {
        "post": {
            "tags": ["Login"],
            "description": "Login user",
            "parameters": [
                {
                    "name": "Login",
                    "in": "body",
                    "description": "User that we want to login",
                    "schema": {
                        "$ref": "#/definitions/loginUser"
                    }
                }
            ],

            "produces": ["application/json"],
            "responses": {
                "200": {
                    "description": "ok"
                },
                "404": {
                    "description": "Not Found"
                },
                "400": {
                    "description": "User login failed"
                }
            }
        }
    },

    "/forgetPassword": {
        "post": {
            "tags": ["forgetPassword"],
            "description": "forgetPassword user",
            "parameters": [
                {
                    "name": "ForgetPassword",
                    "in": "body",
                    "description": "user send email for forgetPassword",
                    "schema": {
                        "$ref": "#/definitions/forgetPasswordUser"
                    }
                }
            ],

            "produces": ["application/json"],
            "responses": {
                "201": {
                    "description": "email send Successfully"
                },
                "400": {
                    "description": "Wrong Input Validations"
                },
                "409": {
                    "description": "email not Exist"
                },
                "500": {
                    "description": "server-error"
                }
            }
        }
    },

    "/resetpassword": {
        "post": {
            "tags": [
                "reset password"
            ],
            "description": "Already registered Then reset password successfully",
            "parameters": [
                {
                    "name": "Authorization",
                    "in": "header",
                    "description": "token for validation",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "Reset Password",
                    "in": "body",
                    "description": "Reset Password with token",
                    "schema": {
                        "$ref": "#/definitions/resetPassword"
                    }
                }
            ],
            "produces": [
                "application/json"
            ],
            "responses": {
                "200": {
                    "description": "Password reset succesfully"
                },
                "401": {
                    "description": "Unautheried"
                },
                "500": {
                    "description": "server-error"
                }
            }
        }
    },
    "/createnotes": {
        "post": {
            "tags": [
                "Create Notes"
            ],
            "description": "Creating a note",
            "parameters": [
                {
                    "in": "header",
                    "name": "Authorization",
                    "description": "Token for vaidation",
                    "schema": {
                        "type": "string"
                       
                    }
                },
                {
                    "name": "create note",
                    "in": "body",
                    "description": "Note body",
                    "schema": {
                        "$ref": "#/definitions/notes"
                    }
                }
            ],
            "produces": [
                "application/json"
            ],
            "schema": {
                "$ref": "#/definitions/notes"
            },
            "responses": {
                "201": {
                    "description": "Successfully create note"
                },
                "400": {
                    "description": "fail create note"
                },
                "401": {
                    "description": "Your token has expiered"
                },
                "500": {
                    "description": "Internal server error"
                }
            }
        }
    },
    "/getnotes": {
        "get": {
            "tags": [
                "Get All Notes"
            ],
            "description": "Get all notes",
            "parameters": [
                {
                    "in": "header",
                    "name": "Authorization",
                    "description": "Token for vaidation",
                    "schema": {
                        "type": "string"
                        
                    }
                }
            ],
            "produces": [
                "application/json"
            ],
            
            "responses": {
                "201": {
                    "description": "Get All Notes successfully"
                },
                "401": {
                    "description": "Your token has expiered Or Enter Valid Token"
                },
                "500": {
                    "description": "Internal server error"
                }
            }
        }
    },
    "/getnote/{id}": {
        "get": {
            "tags": [
                "Get Note By Id"
            ],
            "description": "Get note by ID",
            "parameters": [
                {
                    "in": "header",
                    "name": "Authorization",
                    "description": "Token for vaidation",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "Id of note you want to update",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "produces": [
                "application/json"
            ],
            "responses": {
                "200": {
                    "description": "Note Found Successfully"
                },
                "401": {
                    "description": "Your token has expiered Or Enter Valid Token"
                },
                "500": {
                    "description": "Internal server error"
                }
            }
        }
    },
    "/updatenotes/{id}": {
        "put": {
            "tags": [
                "Update Note By Id"
            ],
            "description": "put note by ID",
            "parameters": [
                {
                    "in": "header",
                    "name": "Authorization",
                    "description": "Token for vaidation",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "Id of note you want to update",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "update note",
                    "in": "body",
                    "description": "Note body",
                    "schema": {
                        "$ref": "#/definitions/notes"
                    }
                }
            ],
            "produces": [
                "application/json"
            ],
            "responses": {
                "201": {
                    "description": "Note Updated Successfully"
                },
                "401": {
                    "description": "Your token has expiered Or Enter Valid Token"
                },
                "500": {
                    "description": "Internal server error"
                }
            }
        }
    },
    "/deletenote/{id}": {
        "delete": {
            "tags": [
                "Delete Note By Id"
            ],
            "description": "delete note by ID",
            "parameters": [
                {
                    "in": "header",
                    "name": "Authorization",
                    "description": "Token for vaidation",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "Id of note you want to update",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "produces": [
                "application/json"
            ],
            "responses": {
                "200": {
                    "description": "Note Delete succesfully"
                },
                "401": {
                    "description": "Your token has expiered Or Enter Valid Token"
                },
                "500": {
                    "description": "Internal server error"
                }
            }
        }
    },
    "/createlabel": {
        "post": {
            "tags": [
                "Create Label"
            ],
            "description": "Creating a Label",
            "parameters": [
                {
                    "in": "header",
                    "name": "Authorization",
                    "description": "Token for vaidation",
                    "schema": {
                        "type": "string"
                       
                    }
                },
                {
                    "name": "create label",
                    "in": "body",
                    "description": "Label body",
                    "schema": {
                        "$ref": "#/definitions/labes"
                    }
                }
            ],
            "produces": [
                "application/json"
            ],
            "responses": {
                "201": {
                    "description": "Label Created Successfully"
                },
                "400": {
                    "description": "Wrong Input Validations or Failed Create Label"
                },
                "401": {
                    "description": "Your token has expiered"
                },
                "500": {
                    "description": "Internal server error"
                }
            }
        }
    },
    "/getlabels": {
        "get": {
            "tags": [
                "Get All Labels"
            ],
            "description": "Get all labels",
            "parameters": [
                {
                    "in": "header",
                    "name": "Authorization",
                    "description": "Token for vaidation",
                    "schema": {
                        "type": "string"
                        
                    }
                }
            ],
            "produces": [
                "application/json"
            ],
            
            "responses": {
                "201": {
                    "description": "Get All Label successfully"
                },
                "401": {
                    "description": "Your token has expiered Or Enter Valid Token"
                },
                "500": {
                    "description": "Internal server error"
                }
            }
        }
    },
    "/getlabel/{id}": {
        "get": {
            "tags": [
                "Get Label By Id"
            ],
            "description": "Get label by ID",
            "parameters": [
                {
                    "in": "header",
                    "name": "Authorization",
                    "description": "Token for vaidation",
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "Id of label you want to Get",
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "produces": [
                "application/json"
            ],
            "responses": {
                "200": {
                    "description": "Label Found Successfully"
                },
                "400": {
                    "description": "Wrong Input Validations"
                },
                "401": {
                    "description": "Your token has expiered Or Enter Valid Token"
                },
                "500": {
                    "description": "Internal server error"
                }
            }
        }
    }
},
    "definitions": {
        "registerUser": {        
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                }
            }
        },
        "loginUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                }
            },
            "example": {
                "email":"mandeep.test1996@gmail.com",
                "Password": "Password@1234"
            }
        },
        "forgetPasswordUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "resetPassword": {
            "type": "object",
            "properties": {
                "Password": {
                    "type": "string",
                    "description": "create new password for user."
                }
            },
            "example": {
                "Password": "Password@1234"
            }
        },
        "notes": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "example": {
                "title": " title",
                "description": "description"
            }
        },
        "labes": {
            "type": "object",
            "properties": {
                "labelName": {
                    "type": "string"
                }
            },
            "example": {
                "labelName": " label_Name"
                
            }
        }
    }
}